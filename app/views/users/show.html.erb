<p id="notice">
    <%= flash[:notice] %>
</p>

<div>
  <div class="d-flex">
  <%= attachment_image_tag @user, :profile_image, width: 50, height: 50, format: 'jpeg', fallback: "default-image2.jpg", style: 'border-radius: 50%' %>
  <h3><%= @user.name %></h3>
  <% if current_user != @user %>
    <% if current_user.following?(@user) %>
      <% if @user.private_account? %>
        <%= link_to 'フォロー中', user_relationships_path(@user.id), method: :delete, data: { confirm: '本当にフォローを外しますか？再度閲覧する場合は、改めてリクエスト申請をする必要があります。' }, class: "btn-sm btn-light" %>
      <% else %>
        <%= link_to 'フォロー中', user_relationships_path(@user.id), method: :delete, data: { confirm: '本当にフォローを外しますか？' }, class: "btn-sm btn-light" %>
      <% end %>
    <% else %>
      <% if @user.private_account? %>
        <% if current_user.pending_follow_request?(@user) %>
          <%= link_to 'リクエスト済み', '#', class: "btn-sm btn-secondary", disabled: true %>
        <% else %>
          <%= link_to 'フォローする', user_relationships_path(@user.id), method: :POST, class: "btn-sm btn-dark" %>
        <% end %>
      <% else %>
        <%= link_to 'フォローする', user_relationships_path(@user.id), method: :POST, class: "btn-sm btn-dark" %>
      <% end %>
    <% end %>
  <% end %>
  
  </div>
  <h6><%= @user.introduction %></h6>
  <div class="d-flex">
     <%= link_to follows_user_path(@user) do %>
     <h6>フォロー<%= @following_users.count %></h6>
     <% end %>&nbsp;&nbsp;
     <%= link_to followers_user_path(@user) do %>
     <h6>フォロワー<%= @follower_users.count %></h6>
     <% end %>
   </div>
  
   
  
   
  <div class='row'>
  <% if @user == current_user %>
    <a class="btn btn-outline-secondary btn-block" href="<%= edit_user_path(current_user) %>">
      <i class="fas fa-user-cog"></i>
    </a>
  <% end %>
</div>
  
</div>

<div id='map'></div>

<style>
#map {
  height: 600px;
  width: 600px;
}
</style>

<script>
let map
let geocoder
const display = document.getElementById('display')
let marker = null; // マーカーを保持する変数

function initMap() {
    geocoder = new google.maps.Geocoder()
    // インスタンス変数 @center_latitude と @center_longitude を使用して中心座標を設定
    var centerLatitude = <%= @center_latitude || 35.682839 %>;
    var centerLongitude = <%= @center_longitude || 139.759455 %>;

    map = new google.maps.Map(document.getElementById('map'), {
      center: {lat: centerLatitude, lng: centerLongitude},
      zoom: 5
    });

    var markers = [];
    var infoWindows = [];

    // @places からピンを追加する
    <% @places.each do |place| %>
      var marker = new google.maps.Marker({
        position: {lat: <%= place.latitude %>, lng: <%= place.longitude %>},
        map: map,
        title: '<%= place.name %>'
      });

      // 吹き出し（情報ウィンドウ）作成
      var infoWindow<%= place.id %> = new google.maps.InfoWindow({
        content: '<h3>' + '<%= place.name %>' + '</h3>' +
                 '<p><%= link_to image_tag(place.image_url, width: 100, height: 100), place.image_url, data: { lightbox: 'place', title: place.body } %></p>'+
                 '<h4>'+'<%= place.created_at.strftime('%Y/%m/%d') %>'+'</h4>'+'<% if place.user == current_user %>'+
                 '<%= link_to "削除", map_path(place), method: :delete, data: { confirm: '本当に消しますか？' }, class: 'delete-button', "data-place-id" => place.id %>'+'<% end %>'

      });

      // マーカーをクリックしたら情報ウィンドウを開く
      marker.addListener('click', (function(marker, infoWindow) {
        return function() {
          for (var i in markers) {
            infoWindows[i].close(map, markers[i]);
          }
          infoWindow.open(map, marker);
        };
      })(marker, infoWindow<%= place.id %>));
      
      // 地図の中心座標を設定（マーカーが作成された位置を中心に）
      

      markers.push(marker);
      infoWindows.push(infoWindow<%= place.id %>);
  
    <% end %>
  }
  
  
  
  // Google Maps APIの読み込み
  var script = document.createElement('script');
  script.src = 'https://maps.googleapis.com/maps/api/js?key=AIzaSyDtURyIrXDlqiIj0KdKOuCtWuQGfzHAwBQ&callback=initMap';
  script.defer = true;
  script.async = true;
  document.head.appendChild(script);
</script>

